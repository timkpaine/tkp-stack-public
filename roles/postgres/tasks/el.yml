---
- name: Install postgresql repo
  ansible.builtin.dnf:
    name:
      - https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm
    state: present
    disable_gpg_check: true

- name: Install postgres
  ansible.builtin.dnf:
    name:
      - postgresql{{ POSTGRES_VERSION }}
      - postgresql{{ POSTGRES_VERSION }}-server
    state: present

- name: Copy postgres files over
  ansible.builtin.shell: |
    cp -r /usr/pgsql-{{ POSTGRES_VERSION }}/* /usr/local/
  args:
    creates: "/usr/local/bin/initdb"

- name: Copy postgres files over
  ansible.builtin.copy:
    content: |
      # It's not recommended to modify this file in-place, because it will be
      # overwritten during package upgrades.  It is recommended to use systemd
      # "dropin" feature;  i.e. create file with suffix .conf under
      # /etc/systemd/system/postgresql-14.service.d directory overriding the
      # unit's defaults. You can also use "systemctl edit postgresql-14"
      # Look at systemd.unit(5) manual page for more info.

      # Note: changing PGDATA will typically require adjusting SELinux
      # configuration as well.

      # Note: do not use a PGDATA pathname containing spaces, or you will
      # break postgresql-14-setup.
      [Unit]
      Description=PostgreSQL 14 database server
      Documentation=https://www.postgresql.org/docs/14/static/
      After=syslog.target
      After=network-online.target
      AssertPathExists=/etc/postgresql/%I/postgresql.conf
      RequiresMountsFor=/etc/postgresql/%I /var/lib/postgresql/%I
      PartOf=postgresql.service
      ReloadPropagatedFrom=postgresql.service
      Before=postgresql.service

      [Service]
      Type=notify

      User=postgres
      Group=postgres

      # Note: avoid inserting whitespace in these Environment= lines, or you may
      # break postgresql-setup.

      # Location of database directory
      Environment=PGDATA=/var/lib/pgsql/%I

      # Where to send early-startup messages from the server (before the logging
      # options of postgresql.conf take effect)
      # This is normally controlled by the global default set by systemd
      # StandardOutput=syslog

      # Disable OOM kill on the postmaster
      OOMScoreAdjust=-1000
      Environment=PG_OOM_ADJUST_FILE=/proc/self/oom_score_adj
      Environment=PG_OOM_ADJUST_VALUE=0

      ExecStartPre=/usr/pgsql-14/bin/postgresql-14-check-db-dir ${PGDATA}
      ExecStart=/usr/pgsql-14/bin/postmaster -D ${PGDATA}
      ExecReload=/bin/kill -HUP $MAINPID
      KillMode=mixed
      KillSignal=SIGINT

      # Do not set any timeout value, so that systemd will not kill postmaster
      # during crash recovery.
      TimeoutSec=0

      # 0 is the same as infinity, but "infinity" needs systemd 229
      TimeoutStartSec=0

      TimeoutStopSec=1h

      [Install]
      WantedBy=multi-user.target
    dest: /lib/systemd/system/postgresql@.service

- name: Copy postgres files over
  ansible.builtin.copy:
    content: |
      # systemd service for managing all PostgreSQL clusters on the system. This
      # service is actually a systemd target, but we are using a service since
      # targets cannot be reloaded.

      [Unit]
      Description=PostgreSQL RDBMS

      [Service]
      Type=oneshot
      ExecStart=/bin/true
      ExecReload=/bin/true
      RemainAfterExit=on

      [Install]
      WantedBy=multi-user.target
    dest: /lib/systemd/system/postgresql.service
