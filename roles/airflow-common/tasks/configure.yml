---
- name: Create airflow directory
  ansible.builtin.file:
    path: /var/lib/airflow
    state: directory
    mode: '0775'
    owner: airflow
    group: services
  become: true

# TODO uid here needs to be standardized across servers
- name: Mount airflow shared SMB drive
  ansible.posix.mount:
    src: //{{ DOMAINS_AIRFLOW_SHAREDRIVE }}/Developer/var/lib/airflow
    path: /var/lib/airflow
    opts: "rw,vers=3,file_mode=0600,dir_mode=0700,uid={{ SERVICE_USERS.AIRFLOW.uid }},user={{ SERVICE_USERS.AIRFLOW.username }},username={{ SERVICE_USERS.AIRFLOW.username }},password={{ AIRFLOW_MOUNT_PASSWORD }}"
    fstype: cifs
    state: mounted
  become: true
  when: "MACHINE_LOCATION == 'internal' and OS != 'macOS'"
  # TODO MAC

- name: Create airflow celery dags directory
  ansible.builtin.file:
    path: /var/lib/airflow/dags
    state: directory
    mode: '0775'
    owner: airflow
    group: services
  become: true

- name: Create airflow celery lib directory
  ansible.builtin.file:
    path: /var/lib/airflow/celery
    state: directory
    mode: '0775'
    owner: airflow
    group: services
  become: true

# NOTE: put in /var/lib/airflow for shared mount
- name: Create airflow log directory
  ansible.builtin.file:
    path: /var/lib/airflow/logs
    state: directory
    mode: '0775'
    owner: airflow
    group: services
  become: true

- name: Create airflow scheduler log directory
  ansible.builtin.file:
    path: /var/lib/airflow/logs/scheduler
    state: directory
    mode: '0775'
    owner: airflow
    group: services
  become: true

- name: Create airflow celery log directory
  ansible.builtin.file:
    path: /var/lib/airflow/logs/celery
    state: directory
    mode: '0775'
    owner: airflow
    group: services
  become: true

- name: Copy airflow config file into place
  ansible.builtin.copy:
    dest: /var/lib/airflow/airflow.cfg
    mode: '0755'
    owner: airflow
    group: services
    content: "{{ lookup('ansible.builtin.template', '../config/airflow.cfg') }}"
  become: true

- name: Copy webserver config file into place
  ansible.builtin.copy:
    dest: /var/lib/airflow/webserver_config.py
    mode: '0755'
    owner: airflow
    group: services
    content: "{{ lookup('ansible.builtin.template', '../config/webserver_config.py') }}"
  become: true

- name: Set AIRFLOW_HOME for any logins
  ansible.builtin.copy:
    dest: /etc/profile.d/airflow.sh
    content: 'export AIRFLOW_HOME=/var/lib/airflow'
  become: true

- name: Create airflow data directory
  ansible.builtin.file:
    path: /data/airflow
    state: directory
    mode: '0775'
    owner: airflow
    group: services
  become: true

- name: Create airflow home directory
  ansible.builtin.file:
    path: /mnt/home/airflow
    state: directory
    mode: '0775'
    owner: airflow
    group: services
  become: true

# TODO MAC
# - name: Mount home shared SMB drive
#   ansible.posix.mount:
#     src: //{{ DOMAINS_AIRFLOW_SHAREDRIVE }}/Developer/home/{{ SERVICE_USERS.AIRFLOW.username }}
#     path: /mnt/home/{{ SERVICE_USERS.AIRFLOW.username }}
#     opts: "rw,vers=3,file_mode=0600,dir_mode=0700,uid={{ SERVICE_USERS.AIRFLOW.uid }},user={{ SERVICE_USERS.AIRFLOW.username }},username={{ SERVICE_USERS.AIRFLOW.username }},password={{ AIRFLOW_MOUNT_PASSWORD }}"
#     fstype: cifs
#     state: mounted
#   become: true
#   when: "MACHINE_LOCATION == 'internal' and OS != 'macOS'"
# - name: Mount data shared SMB drive
#   ansible.posix.mount:
#     src: //{{ DOMAINS_AIRFLOW_SHAREDRIVE }}/Developer/data/airflow
#     path: /data/airflow
#     opts: "rw,vers=3,file_mode=0600,dir_mode=0700,uid={{ SERVICE_USERS.AIRFLOW.uid }},user={{ SERVICE_USERS.AIRFLOW.username }},username={{ SERVICE_USERS.AIRFLOW.username }},password={{ AIRFLOW_MOUNT_PASSWORD }}"
#     fstype: cifs
#     state: mounted
#   become: true
#   when: "MACHINE_LOCATION == 'internal' and OS != 'macOS'"
- name: Mount home shared nfs drive
  ansible.posix.mount:
    src: "{{ DOMAINS_AIRFLOW_SHAREDRIVE }}:/volume1/Developer/home/{{ SERVICE_USERS.AIRFLOW.username }}"
    path: /mnt/home/{{ SERVICE_USERS.AIRFLOW.username }}
    opts: "defaults"
    fstype: nfs
    state: mounted
  become: true
  when: "MACHINE_LOCATION == 'internal' and OS != 'macOS'"

- name: Mount data shared nfs drive
  ansible.posix.mount:
    src: "{{ DOMAINS_AIRFLOW_SHAREDRIVE }}:/volume1/Developer/data/airflow"
    path: /data/airflow
    opts: "defaults"
    fstype: nfs
    state: mounted
  become: true
  when: "MACHINE_LOCATION == 'internal' and OS != 'macOS'"
