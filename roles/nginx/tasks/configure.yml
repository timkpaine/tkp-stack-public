---
- name: Create nginx etc directory if it does not exist
  ansible.builtin.file:
    path: /etc/nginx
    state: directory
    mode: '0755'
    owner: nginx
    group: services
  become: true

- name: Create nginx etc/conf.d directory if it does not exist
  ansible.builtin.file:
    path: /etc/nginx/conf.d
    state: directory
    mode: '0755'
    owner: nginx
    group: services
  become: true

- name: Ensure nginx conf file is present
  ansible.builtin.copy:
    dest: /etc/nginx/nginx.conf
    mode: '0644'
    content: |
      # For more information on configuration, see:
      #   * Official English Documentation: http://nginx.org/en/docs/
      #   * Official Russian Documentation: http://nginx.org/ru/docs/
      user nginx services;
      worker_processes auto;
      error_log /var/log/nginx/error.log;
      pid /run/nginx.pid;

      # Load dynamic modules. See /usr/share/nginx/README.dynamic.
      include /usr/share/nginx/modules/*.conf;

      events {
          worker_connections 1024;
      }

      http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        types_hash_max_size 2048;

        include             /etc/nginx/mime.types;
        default_type        application/octet-stream;

        # Load modular configuration files from the /etc/nginx/conf.d directory.
        # See http://nginx.org/en/docs/ngx_core_module.html#include
        # for more information.
        include /etc/nginx/conf.d/*.conf;

        server {
            server_name  {{ inventory_hostname }};
            listen 80;
            return 301 https://{{ ROOT_DOMAIN }};
        }

        ### BEGIN SERVERS


        ### END SERVERS
      }
  become: true

- name: Add nginx server file for vhost
  ansible.builtin.copy:
    dest: /etc/nginx/conf.d/{{ NGINX_DEFAULT_VHOST }}-default-vhost.conf
    mode: '0644'
    content: |
      server {
          listen 80 default_server;
          listen [::]:80 default_server;

          server_name _;
          access_log off;
          # redirect to https
          return 301 https://$host$request_uri;
      }
  become: true
  when: inventory_hostname is match("dev*")

- name: Add nginx server file for dokku
  ansible.builtin.copy:
    dest: /etc/nginx/conf.d/{{ NGINX_DOKKU }}-dokku.conf
    mode: '0644'
    content: |
      include /home/dokku/*/nginx.conf;

      server_tokens off;

      # Settings from https://mozilla.github.io/server-side-tls/ssl-config-generator/
      ssl_session_cache   shared:SSL:20m;
      ssl_session_timeout 1d;
      ssl_session_tickets off;

      ssl_dhparam /etc/nginx/dhparam.pem;
      ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  become: true
  when: inventory_hostname is match("dev*")

- name: Create cache directory if it does not exist
  ansible.builtin.file:
    path: /var/cache/nginx
    state: directory
    mode: '0755'
    owner: nginx
    group: services

- name: Create log directory if it does not exist
  ansible.builtin.file:
    path: /var/log/nginx
    state: directory
    mode: '0755'
    owner: nginx
    group: services

- name: Create log files with correct permissions
  ansible.builtin.file:
    path: /var/log/nginx/{{ item.file }}
    mode: '0644'
    owner: nginx
    group: services
    state: touch
  loop:
    - { file: error.log }
    - { file: access.log }
